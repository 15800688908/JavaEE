package cn.itcast.customer.dao;

import java.sql.SQLException;
import java.util.List;

import org.apache.commons.dbutils.QueryRunner;
import org.apache.commons.dbutils.handlers.BeanHandler;
import org.apache.commons.dbutils.handlers.BeanListHandler;

import cn.itcast.customer.domain.Customer;
import cn.itcast.customer.domain.PageBean;
import cn.itcast.customer.utils.DataSourceUtils;

public class CustomerDao {
	public List<Customer> findAll() throws SQLException {
		String sql = "";
		QueryRunner runner = new QueryRunner(DataSourceUtils.getDataSource());
		return runner.query(sql, new BeanListHandler<Customer>(Customer.class));

	}

	public void deleById(String id) throws SQLException {
		String sql = null;
		QueryRunner runner = new QueryRunner(DataSourceUtils.getDataSource());
		runner.update(sql, id);
	}

	public Customer findById(String id) throws SQLException {
		String sql = "";
		QueryRunner runner = new QueryRunner(DataSourceUtils.getDataSource());
		return runner.query(sql, new BeanHandler<Customer>(Customer.class), id);

	}

	public void update(Customer c) throws SQLException {
		String sql = "";
		QueryRunner runner = new QueryRunner(DataSourceUtils.getDataSource());
		runner.update(sql, c.getBirthday());

	}

	public void add(Customer c) throws SQLException {
		String sql = "";
		QueryRunner runner = new QueryRunner(DataSourceUtils.getDataSource());
		runner.update(sql, c.getId());
	}

	public void delSel(String[] id) throws SQLException {
		String sql = "";
		QueryRunner runner = new QueryRunner(DataSourceUtils.getDataSource());
		Object[][] ids = new Object[id.length][1];
		for (int i = 0; i < ids.length; i++) {
			ids[i][0] = id[i];
		}
		runner.batch(sql, ids);
	}

	public List<Customer> simpelSel(String field, String msg)
			throws SQLException {
		String sql = "select * from user where " + field + " LIKE ?";
		QueryRunner runner = new QueryRunner(DataSourceUtils.getDataSource());
		return runner.query(sql, new BeanListHandler<Customer>(Customer.class),
				field, "%" + msg + "%");

	}

	public PageBean findByPage(int pageNum, int currentPage)throws SQLException {
		String sql = "select * from customer limit ?,?";
		QueryRunner runner = new QueryRunner(DataSourceUtils.getDataSource());
		return runner.query(sql, new BeanListHandler<Customer>(Customer.class),
				(pageNum - 1) * currentPage, currentPage);

	}

}
